{
	"info": {
		"_postman_id": "c34cd671-ce3e-4e8b-961e-5decd9e67e42",
		"name": "ReqRes API Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39493750"
	},
	"item": [
		{
			"name": "AUTENTICACION",
			"item": [
				{
					"name": "LOGIN EXITOSO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Codigo de error 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"El login responde con token\", function () {\r",
									"    var resjson = pm.response.json();\r",
									"    pm.expect(resjson).to.have.property(\"token\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"eve.holt@reqres.in\",\r\n  \"password\": \"cityslicka\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/login",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "LOGIN FALLIDO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Codigo de error 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje de error correcto\", function () {\r",
									"    var resjson = pm.response.json();\r",
									"    pm.expect(resjson.error).to.eql(\"Missing password\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"eve.holt@reqres.in\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/login",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "REGISTRO EXITOSO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Codigo de error 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Responde con id y token\", function () {\r",
									"    var resjson = pm.response.json();\r",
									"    pm.expect(resjson).to.have.property(\"id\");\r",
									"    pm.expect(resjson).to.have.property(\"token\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"eve.holt@reqres.in\",\r\n  \"password\": \"pistol\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/register",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "REGISTRO FALLIDO",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Codigo de error 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Devuelve error correcto\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error).to.eql(\"Missing password\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"sydney@fife\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/register",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GESTION DE USUARIOS",
			"item": [
				{
					"name": "Create (POST /api/users)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El codigo de error es 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Respuesta con ID \", function () {\r",
									"    var resjson = pm.response.json();\r",
									"    pm.expect(resjson).to.have.property(\"id\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"QA Tester\",\r\n  \"job\": \"Automation Engineer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users\n",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users\n"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read (GET /api/users/{id})",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"El codigo de error es 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"El usuario tiene email\", function () {\r",
									"    var resjson = pm.response.json();\r",
									"    pm.expect(resjson.data).to.have.property(\"email\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users/8",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update (PUT /api/users/{id})",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Codigo de error 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"El usuario fue actualizado\", function () {\r",
									"    var resjson = pm.response.json();\r",
									"    pm.expect(resjson.name).to.eql(\"QA Updated\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"QA Updated\",\r\n  \"job\": \"Lead Tester\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users/2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete (DELETE /api/users/{id})",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code es 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users/2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users",
								"2"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PAGINACION",
			"item": [
				{
					"name": "RESPUESTAS PAGINADAS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Verificar que la respuesta sea exitosa\r",
									"pm.test(\"Status code es 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// Validar que el número de página sea el solicitado\r",
									"pm.test(\"Página correcta\", function () {\r",
									"    var resjson = pm.response.json();\r",
									"    pm.expect(resjson.page).to.eql(2);\r",
									"});\r",
									"\r",
									"// Validar que hay usuarios en la respuesta\r",
									"pm.test(\"Hay usuarios en la página\", function () {\r",
									"    var resjson = pm.response.json();\r",
									"    pm.expect(resjson.data.length).to.be.above(0);\r",
									"});\r",
									"\r",
									"// Validar que cada usuario tiene los campos esperados\r",
									"pm.test(\"Cada usuario tiene email, nombre y avatar\", function () {\r",
									"    var resjson = pm.response.json();\r",
									"    resjson.data.forEach(function (user) {\r",
									"        pm.expect(user).to.have.property(\"email\");\r",
									"        pm.expect(user).to.have.property(\"first_name\");\r",
									"        pm.expect(user).to.have.property(\"last_name\");\r",
									"        pm.expect(user).to.have.property(\"avatar\");\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users?page=2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "RATE LIMITING",
			"item": [
				{
					"name": "Detectar y manejar límites de requests",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Verificar si la respuesta fue exitosa o bloqueada por límite\r",
									"if (pm.response.code === 429) {\r",
									"    pm.test(\"Rate limit alcanzado\", function () {\r",
									"        var resjson = pm.response.json();\r",
									"        pm.expect(resjson.error).to.include(\"Too Many Requests\");\r",
									"    });\r",
									"} else {\r",
									"    pm.test(\"Request dentro del límite permitido\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"}\r",
									"\r",
									"// Extra: Detectar encabezados de rate limit (si existieran)\r",
									"pm.test(\"Verificar encabezados de rate limit\", function () {\r",
									"    var limit = pm.response.headers.get(\"X-RateLimit-Limit\");\r",
									"    var remaining = pm.response.headers.get(\"X-RateLimit-Remaining\");\r",
									"    if (limit && remaining) {\r",
									"        console.log(\"Límite total:\", limit);\r",
									"        console.log(\"Límite restante:\", remaining);\r",
									"        pm.expect(parseInt(remaining)).to.be.at.least(0);\r",
									"    } else {\r",
									"        console.warn(\"El servidor no envía encabezados de rate limit\");\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users?page=1",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.request.headers.add({ key: \"x-api-key\", value: pm.collectionVariables.get(\"api_key\") });\r",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "api_key",
			"value": "reqres-free-v1",
			"type": "string"
		}
	]
}